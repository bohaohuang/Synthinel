/**
 * File:    Roof Textures.cga
 * Created: 6 Nov 2013
 * Author:  Esri R&D Center Zurich
 */

version "2018.0"



###################################################3
# Control Attributes
#

attr FlatRoofTexture	= getFlatRoofTexture
attr SlopedRoofTexture	= getSlopedRoofTexture



######################################################
# functions (suited for external usage)
#


getFlatRoofTexture		= fileRandom("/ESRI.lib/assets/Roofs/Flat_grey/*.jpg")
getSlopedRoofTexture	= fileRandom("/ESRI.lib/assets/Roofs/Sloped_grey/*.jpg")
getColor(c) 			= clamp(rand(c-0.02, c+0.02), 0, 1)


###################################################3
# Helpers
#

const flatRoofColor = 10%: .6  25%: .7  30%: .8  25%: .9 else: 1
	
const slopedRoofTextureDimension = rand(10,15)

flatRoofTextureDimension(width) =
	case width > 40	: rand(40,80)
	case width > 20	: rand(20,40)
	else 			: width



###################################################3
# RULES
#

@StartRule
Generate(r, g, b) -->
	case geometry.angle(maxSlope) > 2: SlopedPlane(r, g, b)
	else							 : FlatPlane(r, g, b)

FlatPlane(r, g, b) -->
	alignScopeToGeometry(yUp, any, longest)
	setupProjection(0,scope.xz,flatRoofTextureDimension(scope.sx),flatRoofTextureDimension(scope.sz)) projectUV(0)
	texture(FlatRoofTexture)
	color(material.color.r*flatRoofColor*getColor(r), material.color.g*flatRoofColor*getColor(g), material.color.b*flatRoofColor*getColor(b))
	set(material.bumpmap,FlatRoofTexture)

SlopedPlane(r, g, b) -->
	setupProjection(0,scope.xy,slopedRoofTextureDimension,slopedRoofTextureDimension,rand(1),rand(1)) projectUV(0)
	texture(SlopedRoofTexture)
	color(material.color.r*flatRoofColor*getColor(r), material.color.g*flatRoofColor*getColor(g), material.color.b*flatRoofColor*getColor(b))
	set(material.bumpmap,SlopedRoofTexture)
	
	

